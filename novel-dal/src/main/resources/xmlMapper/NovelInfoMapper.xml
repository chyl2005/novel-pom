<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.novel.dal.mapper.NovelInfoMapper">
    <resultMap id="resultMap" type="com.github.novel.entity.NovelDO">

        <id column="id" property="id"/>
        <result column="book_id" property="bookId"/>
        <result column="book_url" property="bookUrl"/>
        <result column="book_name" property="bookName"/>
        <result column="author" property="author"/>
        <result column="chapter_list_url" property="chapterListUrl"/>
        <result column="status" property="status"/>
        <result column="craw_status" property="crawStatus"/>
        <result column="click" property="click"/>
        <result column="recommend" property="recommend"/>
        <result column="chapter_count" property="chapterCount"/>
        <result column="description" property="description"/>
        <result column="book_type" property="bookType"/>
        <result column="knowledge_type" property="knowledgeType"/>
        <result column="source_site" property="sourceSite"/>
        <result column="cover_url" property="coverUrl"/>
        <result column="cover_path" property="coverPath"/>
        <result column="update_time" property="updateTime"/>
        <result column="gmt_created" property="gmtCreated"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="is_del" property="isDel"/>
    </resultMap>

    <sql id="generalColumns">
        id,
        book_id,
        book_url,
        book_name ,
        author,
        chapter_list_url,
        status ,
        `craw_status`,
        click,
        recommend,
        chapter_count ,
        description,
        book_type,
        knowledge_type ,
        source_site ,
        cover_url,
        cover_path,
        update_time ,
        gmt_created ,
        gmt_modified,
        is_del

    </sql>

    <insert id="insertOrUpdate" useGeneratedKeys="true" keyProperty="id">
        insert into novel_info (<include refid="generalColumns"/>)

        values (#{id},
        #{bookId},
        #{bookUrl},
        #{bookName},
        #{author},
        #{chapterListUrl},
        #{status},
        #{crawStatus},
        #{click},
        #{recommend},
        #{chapterCount},
        #{description},
        #{bookType},
        #{knowledgeType},
        #{sourceSite},
        #{coverUrl},
        #{coverPath},
        #{updateTime},
        now(),
        now(),
        0)
        on duplicate key update
        <trim suffixOverrides=",">

            book_id= VALUES(book_id),
            book_url= VALUES(book_url),
            book_name= VALUES(book_name) ,
            author= VALUES(author),
            chapter_list_url= VALUES(chapter_list_url),
            status = VALUES(status),
            `craw_status` = VALUES( `craw_status`),
            click= VALUES(click),
            recommend= VALUES(recommend),
            chapter_count= VALUES(chapter_count) ,
            description= VALUES(description),
            book_type= VALUES(book_type),
            knowledge_type = VALUES(knowledge_type),
            source_site = VALUES(source_site),
            cover_url= VALUES(cover_url),
            cover_path= VALUES(cover_path),
            update_time = VALUES(update_time),
            gmt_modified=now()
        </trim>
    </insert>


    <insert id="batchInsertOrUpdate" parameterType="list">
        insert into novel_info (<include refid="generalColumns"/>)
        values
        <foreach collection="list" item="item" separator=",">
            (#{id},
            #{bookId},
            #{bookUrl},
            #{bookName},
            #{author},
            #{chapterListUrl},
            #{status},
            #{crawStatus},
            #{click},
            #{recommend},
            #{chapterCount},
            #{description},
            #{bookType},
            #{knowledgeType},
            #{sourceSite},
            #{coverUrl},
            #{coverPath},
            #{updateTime},
            now(),
            now(),
            0)
        </foreach>
        ON DUPLICATE KEY UPDATE
        book_id= VALUES(book_id),
        book_url= VALUES(book_url),
        book_name= VALUES(book_name) ,
        author= VALUES(author),
        chapter_list_url= VALUES(chapter_list_url),
        status = VALUES(status),
        `craw_status` = VALUES( `craw_status`),
        click= VALUES(click),
        recommend= VALUES(recommend),
        chapter_count= VALUES(chapter_count) ,
        description= VALUES(description),
        book_type= VALUES(book_type),
        knowledge_type = VALUES(knowledge_type),
        source_site = VALUES(source_site),
        cover_url= VALUES(cover_url),
        cover_path= VALUES(cover_path),
        update_time = VALUES(update_time),
        gmt_modified=now()
    </insert>


    <select id="selectByParam" resultMap="resultMap">
        select
        <include refid="generalColumns"/>
        from novel_info
        where is_del=0
        <if test="bookId!=null">
            and book_id=#{bookId}
        </if>
        <if test="chapterListUrl!=null">
            and chapter_list_url = #{chapterListUrl}
        </if>
    </select>


    <select id="selectByChapterUrl" resultMap="resultMap">
        select
        <include refid="generalColumns"/>
        from novel_info
        where is_del=0 and chapter_list_url = #{chapterListUrl}

    </select>

    <select id="selectByBookId" resultMap="resultMap">
        select
        <include refid="generalColumns"/>
        from novel_info
        where is_del=0 and book_id=#{bookId}
    </select>


    <select id="selectByCount" resultType="int">
        select
        count(*) from novel_info
        where is_del=0
        <if test="siteId!=null">
            and site_id=#{siteId}
        </if>
        <if test="pageTypeId!=null">
            and page_type_id = #{pageTypeId}
        </if>
    </select>


    <update id="updateCrawStatus">
        update novel_info
        set craw_status = #{crawStatus.code}, gmt_modified=now()
        where book_id = #{bookId}
    </update>

    <update id="deleteByBookId">
        update novel_info
        set is_del = 1, gmt_modified=now()
        where book_id = #{bookId}
    </update>


</mapper>